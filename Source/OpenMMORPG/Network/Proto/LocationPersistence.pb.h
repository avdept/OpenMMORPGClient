// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LocationPersistence.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_LocationPersistence_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_LocationPersistence_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3013000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3013000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "DisableWarnings.pb.h"
#include "Player.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_LocationPersistence_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_LocationPersistence_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_LocationPersistence_2eproto;
namespace utility_messages {
class LocationPersistenceParams;
class LocationPersistenceParamsDefaultTypeInternal;
extern LocationPersistenceParamsDefaultTypeInternal _LocationPersistenceParams_default_instance_;
class LocationPersistenceResult;
class LocationPersistenceResultDefaultTypeInternal;
extern LocationPersistenceResultDefaultTypeInternal _LocationPersistenceResult_default_instance_;
}  // namespace utility_messages
PROTOBUF_NAMESPACE_OPEN
template<> ::utility_messages::LocationPersistenceParams* Arena::CreateMaybeMessage<::utility_messages::LocationPersistenceParams>(Arena*);
template<> ::utility_messages::LocationPersistenceResult* Arena::CreateMaybeMessage<::utility_messages::LocationPersistenceResult>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace utility_messages {

// ===================================================================

class LocationPersistenceResult PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:utility_messages.LocationPersistenceResult) */ {
 public:
  inline LocationPersistenceResult() : LocationPersistenceResult(nullptr) {}
  virtual ~LocationPersistenceResult();

  LocationPersistenceResult(const LocationPersistenceResult& from);
  LocationPersistenceResult(LocationPersistenceResult&& from) noexcept
    : LocationPersistenceResult() {
    *this = ::std::move(from);
  }

  inline LocationPersistenceResult& operator=(const LocationPersistenceResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocationPersistenceResult& operator=(LocationPersistenceResult&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LocationPersistenceResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationPersistenceResult* internal_default_instance() {
    return reinterpret_cast<const LocationPersistenceResult*>(
               &_LocationPersistenceResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(LocationPersistenceResult& a, LocationPersistenceResult& b) {
    a.Swap(&b);
  }
  inline void Swap(LocationPersistenceResult* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocationPersistenceResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LocationPersistenceResult* New() const final {
    return CreateMaybeMessage<LocationPersistenceResult>(nullptr);
  }

  LocationPersistenceResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LocationPersistenceResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LocationPersistenceResult& from);
  void MergeFrom(const LocationPersistenceResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationPersistenceResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "utility_messages.LocationPersistenceResult";
  }
  protected:
  explicit LocationPersistenceResult(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LocationPersistence_2eproto);
    return ::descriptor_table_LocationPersistence_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPersistedFieldNumber = 1,
  };
  // bool Persisted = 1;
  void clear_persisted();
  bool persisted() const;
  void set_persisted(bool value);
  private:
  bool _internal_persisted() const;
  void _internal_set_persisted(bool value);
  public:

  // @@protoc_insertion_point(class_scope:utility_messages.LocationPersistenceResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool persisted_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LocationPersistence_2eproto;
};
// -------------------------------------------------------------------

class LocationPersistenceParams PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:utility_messages.LocationPersistenceParams) */ {
 public:
  inline LocationPersistenceParams() : LocationPersistenceParams(nullptr) {}
  virtual ~LocationPersistenceParams();

  LocationPersistenceParams(const LocationPersistenceParams& from);
  LocationPersistenceParams(LocationPersistenceParams&& from) noexcept
    : LocationPersistenceParams() {
    *this = ::std::move(from);
  }

  inline LocationPersistenceParams& operator=(const LocationPersistenceParams& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocationPersistenceParams& operator=(LocationPersistenceParams&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const LocationPersistenceParams& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LocationPersistenceParams* internal_default_instance() {
    return reinterpret_cast<const LocationPersistenceParams*>(
               &_LocationPersistenceParams_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(LocationPersistenceParams& a, LocationPersistenceParams& b) {
    a.Swap(&b);
  }
  inline void Swap(LocationPersistenceParams* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocationPersistenceParams* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline LocationPersistenceParams* New() const final {
    return CreateMaybeMessage<LocationPersistenceParams>(nullptr);
  }

  LocationPersistenceParams* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<LocationPersistenceParams>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const LocationPersistenceParams& from);
  void MergeFrom(const LocationPersistenceParams& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(LocationPersistenceParams* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "utility_messages.LocationPersistenceParams";
  }
  protected:
  explicit LocationPersistenceParams(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_LocationPersistence_2eproto);
    return ::descriptor_table_LocationPersistence_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLocationFieldNumber = 3,
    kRotationFieldNumber = 4,
  };
  // .proto_messages.Location Location = 3;
  bool has_location() const;
  private:
  bool _internal_has_location() const;
  public:
  void clear_location();
  const ::proto_messages::Location& location() const;
  ::proto_messages::Location* release_location();
  ::proto_messages::Location* mutable_location();
  void set_allocated_location(::proto_messages::Location* location);
  private:
  const ::proto_messages::Location& _internal_location() const;
  ::proto_messages::Location* _internal_mutable_location();
  public:
  void unsafe_arena_set_allocated_location(
      ::proto_messages::Location* location);
  ::proto_messages::Location* unsafe_arena_release_location();

  // .proto_messages.Rotation Rotation = 4;
  bool has_rotation() const;
  private:
  bool _internal_has_rotation() const;
  public:
  void clear_rotation();
  const ::proto_messages::Rotation& rotation() const;
  ::proto_messages::Rotation* release_rotation();
  ::proto_messages::Rotation* mutable_rotation();
  void set_allocated_rotation(::proto_messages::Rotation* rotation);
  private:
  const ::proto_messages::Rotation& _internal_rotation() const;
  ::proto_messages::Rotation* _internal_mutable_rotation();
  public:
  void unsafe_arena_set_allocated_rotation(
      ::proto_messages::Rotation* rotation);
  ::proto_messages::Rotation* unsafe_arena_release_rotation();

  // @@protoc_insertion_point(class_scope:utility_messages.LocationPersistenceParams)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::proto_messages::Location* location_;
  ::proto_messages::Rotation* rotation_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_LocationPersistence_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LocationPersistenceResult

// bool Persisted = 1;
inline void LocationPersistenceResult::clear_persisted() {
  persisted_ = false;
}
inline bool LocationPersistenceResult::_internal_persisted() const {
  return persisted_;
}
inline bool LocationPersistenceResult::persisted() const {
  // @@protoc_insertion_point(field_get:utility_messages.LocationPersistenceResult.Persisted)
  return _internal_persisted();
}
inline void LocationPersistenceResult::_internal_set_persisted(bool value) {
  
  persisted_ = value;
}
inline void LocationPersistenceResult::set_persisted(bool value) {
  _internal_set_persisted(value);
  // @@protoc_insertion_point(field_set:utility_messages.LocationPersistenceResult.Persisted)
}

// -------------------------------------------------------------------

// LocationPersistenceParams

// .proto_messages.Location Location = 3;
inline bool LocationPersistenceParams::_internal_has_location() const {
  return this != internal_default_instance() && location_ != nullptr;
}
inline bool LocationPersistenceParams::has_location() const {
  return _internal_has_location();
}
inline const ::proto_messages::Location& LocationPersistenceParams::_internal_location() const {
  const ::proto_messages::Location* p = location_;
  return p != nullptr ? *p : *reinterpret_cast<const ::proto_messages::Location*>(
      &::proto_messages::_Location_default_instance_);
}
inline const ::proto_messages::Location& LocationPersistenceParams::location() const {
  // @@protoc_insertion_point(field_get:utility_messages.LocationPersistenceParams.Location)
  return _internal_location();
}
inline void LocationPersistenceParams::unsafe_arena_set_allocated_location(
    ::proto_messages::Location* location) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  location_ = location;
  if (location) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:utility_messages.LocationPersistenceParams.Location)
}
inline ::proto_messages::Location* LocationPersistenceParams::release_location() {
  
  ::proto_messages::Location* temp = location_;
  location_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::proto_messages::Location* LocationPersistenceParams::unsafe_arena_release_location() {
  // @@protoc_insertion_point(field_release:utility_messages.LocationPersistenceParams.Location)
  
  ::proto_messages::Location* temp = location_;
  location_ = nullptr;
  return temp;
}
inline ::proto_messages::Location* LocationPersistenceParams::_internal_mutable_location() {
  
  if (location_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto_messages::Location>(GetArena());
    location_ = p;
  }
  return location_;
}
inline ::proto_messages::Location* LocationPersistenceParams::mutable_location() {
  // @@protoc_insertion_point(field_mutable:utility_messages.LocationPersistenceParams.Location)
  return _internal_mutable_location();
}
inline void LocationPersistenceParams::set_allocated_location(::proto_messages::Location* location) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(location_);
  }
  if (location) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(location)->GetArena();
    if (message_arena != submessage_arena) {
      location = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, location, submessage_arena);
    }
    
  } else {
    
  }
  location_ = location;
  // @@protoc_insertion_point(field_set_allocated:utility_messages.LocationPersistenceParams.Location)
}

// .proto_messages.Rotation Rotation = 4;
inline bool LocationPersistenceParams::_internal_has_rotation() const {
  return this != internal_default_instance() && rotation_ != nullptr;
}
inline bool LocationPersistenceParams::has_rotation() const {
  return _internal_has_rotation();
}
inline const ::proto_messages::Rotation& LocationPersistenceParams::_internal_rotation() const {
  const ::proto_messages::Rotation* p = rotation_;
  return p != nullptr ? *p : *reinterpret_cast<const ::proto_messages::Rotation*>(
      &::proto_messages::_Rotation_default_instance_);
}
inline const ::proto_messages::Rotation& LocationPersistenceParams::rotation() const {
  // @@protoc_insertion_point(field_get:utility_messages.LocationPersistenceParams.Rotation)
  return _internal_rotation();
}
inline void LocationPersistenceParams::unsafe_arena_set_allocated_rotation(
    ::proto_messages::Rotation* rotation) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rotation_);
  }
  rotation_ = rotation;
  if (rotation) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:utility_messages.LocationPersistenceParams.Rotation)
}
inline ::proto_messages::Rotation* LocationPersistenceParams::release_rotation() {
  
  ::proto_messages::Rotation* temp = rotation_;
  rotation_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::proto_messages::Rotation* LocationPersistenceParams::unsafe_arena_release_rotation() {
  // @@protoc_insertion_point(field_release:utility_messages.LocationPersistenceParams.Rotation)
  
  ::proto_messages::Rotation* temp = rotation_;
  rotation_ = nullptr;
  return temp;
}
inline ::proto_messages::Rotation* LocationPersistenceParams::_internal_mutable_rotation() {
  
  if (rotation_ == nullptr) {
    auto* p = CreateMaybeMessage<::proto_messages::Rotation>(GetArena());
    rotation_ = p;
  }
  return rotation_;
}
inline ::proto_messages::Rotation* LocationPersistenceParams::mutable_rotation() {
  // @@protoc_insertion_point(field_mutable:utility_messages.LocationPersistenceParams.Rotation)
  return _internal_mutable_rotation();
}
inline void LocationPersistenceParams::set_allocated_rotation(::proto_messages::Rotation* rotation) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(rotation_);
  }
  if (rotation) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(rotation)->GetArena();
    if (message_arena != submessage_arena) {
      rotation = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rotation, submessage_arena);
    }
    
  } else {
    
  }
  rotation_ = rotation;
  // @@protoc_insertion_point(field_set_allocated:utility_messages.LocationPersistenceParams.Rotation)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace utility_messages

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_LocationPersistence_2eproto
