// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Healtcheck.proto

#include "Healtcheck.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace utility_messages {
class HealthcheckResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HealthcheckResult> _instance;
} _HealthcheckResult_default_instance_;
class HealthCheckParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HealthCheckParams> _instance;
} _HealthCheckParams_default_instance_;
}  // namespace utility_messages
static void InitDefaultsscc_info_HealthCheckParams_Healtcheck_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::utility_messages::_HealthCheckParams_default_instance_;
    new (ptr) ::utility_messages::HealthCheckParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::utility_messages::HealthCheckParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HealthCheckParams_Healtcheck_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HealthCheckParams_Healtcheck_2eproto}, {}};

static void InitDefaultsscc_info_HealthcheckResult_Healtcheck_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::utility_messages::_HealthcheckResult_default_instance_;
    new (ptr) ::utility_messages::HealthcheckResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::utility_messages::HealthcheckResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HealthcheckResult_Healtcheck_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HealthcheckResult_Healtcheck_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Healtcheck_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Healtcheck_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Healtcheck_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Healtcheck_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_messages::HealthcheckResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::utility_messages::HealthcheckResult, alive_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_messages::HealthCheckParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::utility_messages::HealthcheckResult)},
  { 6, -1, sizeof(::utility_messages::HealthCheckParams)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::utility_messages::_HealthcheckResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::utility_messages::_HealthCheckParams_default_instance_),
};

const char descriptor_table_protodef_Healtcheck_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020Healtcheck.proto\022\020utility_messages\"\"\n\021"
  "HealthcheckResult\022\r\n\005Alive\030\001 \001(\010\"\023\n\021Heal"
  "thCheckParams2l\n\022HealthcheckService\022V\n\010R"
  "unCheck\022#.utility_messages.HealthCheckPa"
  "rams\032#.utility_messages.HealthcheckResul"
  "t\"\000B,Z*github.com/avdept/OpenMMORPG_Serv"
  "er/protosb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Healtcheck_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Healtcheck_2eproto_sccs[2] = {
  &scc_info_HealthCheckParams_Healtcheck_2eproto.base,
  &scc_info_HealthcheckResult_Healtcheck_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Healtcheck_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Healtcheck_2eproto = {
  false, false, descriptor_table_protodef_Healtcheck_2eproto, "Healtcheck.proto", 257,
  &descriptor_table_Healtcheck_2eproto_once, descriptor_table_Healtcheck_2eproto_sccs, descriptor_table_Healtcheck_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_Healtcheck_2eproto::offsets,
  file_level_metadata_Healtcheck_2eproto, 2, file_level_enum_descriptors_Healtcheck_2eproto, file_level_service_descriptors_Healtcheck_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Healtcheck_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Healtcheck_2eproto)), true);
namespace utility_messages {

// ===================================================================

void HealthcheckResult::InitAsDefaultInstance() {
}
class HealthcheckResult::_Internal {
 public:
};

HealthcheckResult::HealthcheckResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:utility_messages.HealthcheckResult)
}
HealthcheckResult::HealthcheckResult(const HealthcheckResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  alive_ = from.alive_;
  // @@protoc_insertion_point(copy_constructor:utility_messages.HealthcheckResult)
}

void HealthcheckResult::SharedCtor() {
  alive_ = false;
}

HealthcheckResult::~HealthcheckResult() {
  // @@protoc_insertion_point(destructor:utility_messages.HealthcheckResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HealthcheckResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HealthcheckResult::ArenaDtor(void* object) {
  HealthcheckResult* _this = reinterpret_cast< HealthcheckResult* >(object);
  (void)_this;
}
void HealthcheckResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HealthcheckResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HealthcheckResult& HealthcheckResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HealthcheckResult_Healtcheck_2eproto.base);
  return *internal_default_instance();
}


void HealthcheckResult::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_messages.HealthcheckResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  alive_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HealthcheckResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool Alive = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          alive_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HealthcheckResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_messages.HealthcheckResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Alive = 1;
  if (this->alive() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_alive(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_messages.HealthcheckResult)
  return target;
}

size_t HealthcheckResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_messages.HealthcheckResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool Alive = 1;
  if (this->alive() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HealthcheckResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:utility_messages.HealthcheckResult)
  GOOGLE_DCHECK_NE(&from, this);
  const HealthcheckResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HealthcheckResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:utility_messages.HealthcheckResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:utility_messages.HealthcheckResult)
    MergeFrom(*source);
  }
}

void HealthcheckResult::MergeFrom(const HealthcheckResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_messages.HealthcheckResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.alive() != 0) {
    _internal_set_alive(from._internal_alive());
  }
}

void HealthcheckResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:utility_messages.HealthcheckResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HealthcheckResult::CopyFrom(const HealthcheckResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_messages.HealthcheckResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HealthcheckResult::IsInitialized() const {
  return true;
}

void HealthcheckResult::InternalSwap(HealthcheckResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(alive_, other->alive_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HealthcheckResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HealthCheckParams::InitAsDefaultInstance() {
}
class HealthCheckParams::_Internal {
 public:
};

HealthCheckParams::HealthCheckParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:utility_messages.HealthCheckParams)
}
HealthCheckParams::HealthCheckParams(const HealthCheckParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:utility_messages.HealthCheckParams)
}

void HealthCheckParams::SharedCtor() {
}

HealthCheckParams::~HealthCheckParams() {
  // @@protoc_insertion_point(destructor:utility_messages.HealthCheckParams)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HealthCheckParams::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HealthCheckParams::ArenaDtor(void* object) {
  HealthCheckParams* _this = reinterpret_cast< HealthCheckParams* >(object);
  (void)_this;
}
void HealthCheckParams::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HealthCheckParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HealthCheckParams& HealthCheckParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HealthCheckParams_Healtcheck_2eproto.base);
  return *internal_default_instance();
}


void HealthCheckParams::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_messages.HealthCheckParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HealthCheckParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HealthCheckParams::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_messages.HealthCheckParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_messages.HealthCheckParams)
  return target;
}

size_t HealthCheckParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_messages.HealthCheckParams)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HealthCheckParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:utility_messages.HealthCheckParams)
  GOOGLE_DCHECK_NE(&from, this);
  const HealthCheckParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HealthCheckParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:utility_messages.HealthCheckParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:utility_messages.HealthCheckParams)
    MergeFrom(*source);
  }
}

void HealthCheckParams::MergeFrom(const HealthCheckParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_messages.HealthCheckParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void HealthCheckParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:utility_messages.HealthCheckParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HealthCheckParams::CopyFrom(const HealthCheckParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_messages.HealthCheckParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HealthCheckParams::IsInitialized() const {
  return true;
}

void HealthCheckParams::InternalSwap(HealthCheckParams* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata HealthCheckParams::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace utility_messages
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::utility_messages::HealthcheckResult* Arena::CreateMaybeMessage< ::utility_messages::HealthcheckResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_messages::HealthcheckResult >(arena);
}
template<> PROTOBUF_NOINLINE ::utility_messages::HealthCheckParams* Arena::CreateMaybeMessage< ::utility_messages::HealthCheckParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_messages::HealthCheckParams >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
