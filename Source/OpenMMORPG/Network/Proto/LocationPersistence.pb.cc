// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: LocationPersistence.proto

#include "LocationPersistence.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Player_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Location_Player_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Player_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Rotation_Player_2eproto;
namespace utility_messages {
class LocationPersistenceResultDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LocationPersistenceResult> _instance;
} _LocationPersistenceResult_default_instance_;
class LocationPersistenceParamsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LocationPersistenceParams> _instance;
} _LocationPersistenceParams_default_instance_;
}  // namespace utility_messages
static void InitDefaultsscc_info_LocationPersistenceParams_LocationPersistence_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::utility_messages::_LocationPersistenceParams_default_instance_;
    new (ptr) ::utility_messages::LocationPersistenceParams();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::utility_messages::LocationPersistenceParams::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_LocationPersistenceParams_LocationPersistence_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_LocationPersistenceParams_LocationPersistence_2eproto}, {
      &scc_info_Location_Player_2eproto.base,
      &scc_info_Rotation_Player_2eproto.base,}};

static void InitDefaultsscc_info_LocationPersistenceResult_LocationPersistence_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::utility_messages::_LocationPersistenceResult_default_instance_;
    new (ptr) ::utility_messages::LocationPersistenceResult();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::utility_messages::LocationPersistenceResult::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_LocationPersistenceResult_LocationPersistence_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_LocationPersistenceResult_LocationPersistence_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_LocationPersistence_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_LocationPersistence_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_LocationPersistence_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_LocationPersistence_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_messages::LocationPersistenceResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::utility_messages::LocationPersistenceResult, persisted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::utility_messages::LocationPersistenceParams, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::utility_messages::LocationPersistenceParams, location_),
  PROTOBUF_FIELD_OFFSET(::utility_messages::LocationPersistenceParams, rotation_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::utility_messages::LocationPersistenceResult)},
  { 6, -1, sizeof(::utility_messages::LocationPersistenceParams)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::utility_messages::_LocationPersistenceResult_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::utility_messages::_LocationPersistenceParams_default_instance_),
};

const char descriptor_table_protodef_LocationPersistence_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\031LocationPersistence.proto\022\020utility_mes"
  "sages\032\025DisableWarnings.proto\032\014Player.pro"
  "to\".\n\031LocationPersistenceResult\022\021\n\tPersi"
  "sted\030\001 \001(\010\"s\n\031LocationPersistenceParams\022"
  "*\n\010Location\030\003 \001(\0132\030.proto_messages.Locat"
  "ion\022*\n\010Rotation\030\004 \001(\0132\030.proto_messages.R"
  "otation2\213\001\n\032LocationPersistenceService\022m"
  "\n\017PersistLocation\022+.utility_messages.Loc"
  "ationPersistenceParams\032+.utility_message"
  "s.LocationPersistenceResult\"\000B,Z*github."
  "com/avdept/OpenMMORPG_Server/protosb\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_LocationPersistence_2eproto_deps[2] = {
  &::descriptor_table_DisableWarnings_2eproto,
  &::descriptor_table_Player_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_LocationPersistence_2eproto_sccs[2] = {
  &scc_info_LocationPersistenceParams_LocationPersistence_2eproto.base,
  &scc_info_LocationPersistenceResult_LocationPersistence_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_LocationPersistence_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_LocationPersistence_2eproto = {
  false, false, descriptor_table_protodef_LocationPersistence_2eproto, "LocationPersistence.proto", 443,
  &descriptor_table_LocationPersistence_2eproto_once, descriptor_table_LocationPersistence_2eproto_sccs, descriptor_table_LocationPersistence_2eproto_deps, 2, 2,
  schemas, file_default_instances, TableStruct_LocationPersistence_2eproto::offsets,
  file_level_metadata_LocationPersistence_2eproto, 2, file_level_enum_descriptors_LocationPersistence_2eproto, file_level_service_descriptors_LocationPersistence_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_LocationPersistence_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_LocationPersistence_2eproto)), true);
namespace utility_messages {

// ===================================================================

void LocationPersistenceResult::InitAsDefaultInstance() {
}
class LocationPersistenceResult::_Internal {
 public:
};

LocationPersistenceResult::LocationPersistenceResult(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:utility_messages.LocationPersistenceResult)
}
LocationPersistenceResult::LocationPersistenceResult(const LocationPersistenceResult& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  persisted_ = from.persisted_;
  // @@protoc_insertion_point(copy_constructor:utility_messages.LocationPersistenceResult)
}

void LocationPersistenceResult::SharedCtor() {
  persisted_ = false;
}

LocationPersistenceResult::~LocationPersistenceResult() {
  // @@protoc_insertion_point(destructor:utility_messages.LocationPersistenceResult)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LocationPersistenceResult::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LocationPersistenceResult::ArenaDtor(void* object) {
  LocationPersistenceResult* _this = reinterpret_cast< LocationPersistenceResult* >(object);
  (void)_this;
}
void LocationPersistenceResult::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocationPersistenceResult::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocationPersistenceResult& LocationPersistenceResult::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LocationPersistenceResult_LocationPersistence_2eproto.base);
  return *internal_default_instance();
}


void LocationPersistenceResult::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_messages.LocationPersistenceResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  persisted_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationPersistenceResult::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool Persisted = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          persisted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LocationPersistenceResult::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_messages.LocationPersistenceResult)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Persisted = 1;
  if (this->persisted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_persisted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_messages.LocationPersistenceResult)
  return target;
}

size_t LocationPersistenceResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_messages.LocationPersistenceResult)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool Persisted = 1;
  if (this->persisted() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationPersistenceResult::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:utility_messages.LocationPersistenceResult)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationPersistenceResult* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LocationPersistenceResult>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:utility_messages.LocationPersistenceResult)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:utility_messages.LocationPersistenceResult)
    MergeFrom(*source);
  }
}

void LocationPersistenceResult::MergeFrom(const LocationPersistenceResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_messages.LocationPersistenceResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.persisted() != 0) {
    _internal_set_persisted(from._internal_persisted());
  }
}

void LocationPersistenceResult::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:utility_messages.LocationPersistenceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationPersistenceResult::CopyFrom(const LocationPersistenceResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_messages.LocationPersistenceResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationPersistenceResult::IsInitialized() const {
  return true;
}

void LocationPersistenceResult::InternalSwap(LocationPersistenceResult* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(persisted_, other->persisted_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationPersistenceResult::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LocationPersistenceParams::InitAsDefaultInstance() {
  ::utility_messages::_LocationPersistenceParams_default_instance_._instance.get_mutable()->location_ = const_cast< ::proto_messages::Location*>(
      ::proto_messages::Location::internal_default_instance());
  ::utility_messages::_LocationPersistenceParams_default_instance_._instance.get_mutable()->rotation_ = const_cast< ::proto_messages::Rotation*>(
      ::proto_messages::Rotation::internal_default_instance());
}
class LocationPersistenceParams::_Internal {
 public:
  static const ::proto_messages::Location& location(const LocationPersistenceParams* msg);
  static const ::proto_messages::Rotation& rotation(const LocationPersistenceParams* msg);
};

const ::proto_messages::Location&
LocationPersistenceParams::_Internal::location(const LocationPersistenceParams* msg) {
  return *msg->location_;
}
const ::proto_messages::Rotation&
LocationPersistenceParams::_Internal::rotation(const LocationPersistenceParams* msg) {
  return *msg->rotation_;
}
void LocationPersistenceParams::clear_location() {
  if (GetArena() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
}
void LocationPersistenceParams::clear_rotation() {
  if (GetArena() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
}
LocationPersistenceParams::LocationPersistenceParams(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:utility_messages.LocationPersistenceParams)
}
LocationPersistenceParams::LocationPersistenceParams(const LocationPersistenceParams& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_location()) {
    location_ = new ::proto_messages::Location(*from.location_);
  } else {
    location_ = nullptr;
  }
  if (from._internal_has_rotation()) {
    rotation_ = new ::proto_messages::Rotation(*from.rotation_);
  } else {
    rotation_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:utility_messages.LocationPersistenceParams)
}

void LocationPersistenceParams::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LocationPersistenceParams_LocationPersistence_2eproto.base);
  ::memset(&location_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotation_) -
      reinterpret_cast<char*>(&location_)) + sizeof(rotation_));
}

LocationPersistenceParams::~LocationPersistenceParams() {
  // @@protoc_insertion_point(destructor:utility_messages.LocationPersistenceParams)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LocationPersistenceParams::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete location_;
  if (this != internal_default_instance()) delete rotation_;
}

void LocationPersistenceParams::ArenaDtor(void* object) {
  LocationPersistenceParams* _this = reinterpret_cast< LocationPersistenceParams* >(object);
  (void)_this;
}
void LocationPersistenceParams::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LocationPersistenceParams::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LocationPersistenceParams& LocationPersistenceParams::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LocationPersistenceParams_LocationPersistence_2eproto.base);
  return *internal_default_instance();
}


void LocationPersistenceParams::Clear() {
// @@protoc_insertion_point(message_clear_start:utility_messages.LocationPersistenceParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && location_ != nullptr) {
    delete location_;
  }
  location_ = nullptr;
  if (GetArena() == nullptr && rotation_ != nullptr) {
    delete rotation_;
  }
  rotation_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LocationPersistenceParams::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .proto_messages.Location Location = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_location(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .proto_messages.Rotation Rotation = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_rotation(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LocationPersistenceParams::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:utility_messages.LocationPersistenceParams)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto_messages.Location Location = 3;
  if (this->has_location()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::location(this), target, stream);
  }

  // .proto_messages.Rotation Rotation = 4;
  if (this->has_rotation()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::rotation(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:utility_messages.LocationPersistenceParams)
  return target;
}

size_t LocationPersistenceParams::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:utility_messages.LocationPersistenceParams)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto_messages.Location Location = 3;
  if (this->has_location()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *location_);
  }

  // .proto_messages.Rotation Rotation = 4;
  if (this->has_rotation()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *rotation_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LocationPersistenceParams::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:utility_messages.LocationPersistenceParams)
  GOOGLE_DCHECK_NE(&from, this);
  const LocationPersistenceParams* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LocationPersistenceParams>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:utility_messages.LocationPersistenceParams)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:utility_messages.LocationPersistenceParams)
    MergeFrom(*source);
  }
}

void LocationPersistenceParams::MergeFrom(const LocationPersistenceParams& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:utility_messages.LocationPersistenceParams)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_location()) {
    _internal_mutable_location()->::proto_messages::Location::MergeFrom(from._internal_location());
  }
  if (from.has_rotation()) {
    _internal_mutable_rotation()->::proto_messages::Rotation::MergeFrom(from._internal_rotation());
  }
}

void LocationPersistenceParams::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:utility_messages.LocationPersistenceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LocationPersistenceParams::CopyFrom(const LocationPersistenceParams& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:utility_messages.LocationPersistenceParams)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LocationPersistenceParams::IsInitialized() const {
  return true;
}

void LocationPersistenceParams::InternalSwap(LocationPersistenceParams* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LocationPersistenceParams, rotation_)
      + sizeof(LocationPersistenceParams::rotation_)
      - PROTOBUF_FIELD_OFFSET(LocationPersistenceParams, location_)>(
          reinterpret_cast<char*>(&location_),
          reinterpret_cast<char*>(&other->location_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LocationPersistenceParams::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace utility_messages
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::utility_messages::LocationPersistenceResult* Arena::CreateMaybeMessage< ::utility_messages::LocationPersistenceResult >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_messages::LocationPersistenceResult >(arena);
}
template<> PROTOBUF_NOINLINE ::utility_messages::LocationPersistenceParams* Arena::CreateMaybeMessage< ::utility_messages::LocationPersistenceParams >(Arena* arena) {
  return Arena::CreateMessageInternal< ::utility_messages::LocationPersistenceParams >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
